[
  {
    "id": 1,
    "desc": "try out TextGeometry https://threejs.org/docs/#examples/en/geometries/TextGeometry",
    "status": "done",
    "modified": "2023-04-09 19:34:07.0046873 -0500 CDT"
  },
  {
    "id": 2,
    "desc": "Add hud for text and other stuff https://threejs.org/examples/webgl_sprites",
    "status": "done",
    "modified": "2023-03-02 17:24:23.750336 -0600 CST"
  },
  {
    "id": 3,
    "desc": "get text from canvas. try this func to divide the text into lines: https://stackoverflow.com/a/72600108",
    "status": "done",
    "modified": "2023-03-02 17:48:11.3881026 -0600 CST"
  },
  {
    "id": 4,
    "desc": "try three-text2d. it had a bug in it that prevented it from working at all.",
    "status": "done",
    "modified": "2023-03-02 17:24:15.180335 -0600 CST"
  },
  {
    "id": 5,
    "desc": "try https://github.com/vasturiano/three-spritetext. tried it. it doesn't allow for alignment, but it is a nice module",
    "status": "done",
    "modified": "2023-03-02 17:24:16.9630441 -0600 CST"
  },
  {
    "id": 6,
    "desc": "canvas text is performant but the word breaks are ugly. maybe try a 3d sprite and see if it's much worse.",
    "status": "done",
    "modified": "2023-04-04 21:37:26.9631993 -0500 CDT"
  },
  {
    "id": 7,
    "desc": "bug: holding/right clicking will cause touchend to not fire",
    "status": "pending",
    "modified": "2023-03-19 23:54:30.8099132 -0500 CDT"
  },
  {
    "id": 8,
    "desc": "prevent right click - this may fix mobile touchend not firing if you hold down",
    "status": "done",
    "modified": "2023-04-09 19:34:18.7941938 -0500 CDT"
  },
  {
    "id": 9,
    "desc": "need to review embedNumber3D as it is likely not providing the correct output (something about 84 might be wrong). The coordinates end up being smaller than expected.",
    "status": "done",
    "modified": "2023-04-09 23:23:34.5571782 -0500 CDT"
  },
  {
    "id": 10,
    "desc": "if I change how onosendai calculates coordinates, I should invalidate the indexeddb cache somehow. One idea is hashing events before they get written (including simhash and coords/sector) and hashing before writing; if the hashes are different then I should replace the event. However, there are probably better ways to do this, like simply adding a database migration.",
    "status": "pending",
    "modified": "2023-04-04 21:58:37.7030762 -0500 CDT"
  },
  {
    "id": 11,
    "desc": "draw sector boundaries and adjacent sector boundaries",
    "status": "done",
    "modified": "2023-04-09 19:34:05.5910105 -0500 CDT"
  },
  {
    "id": 12,
    "desc": "add explicit check for duplicate in indexeddb PUT. The amount of duplicates must be extremely high because I am getting about 30 events per minute with the new CPU throttling system which is very slow.",
    "status": "pending",
    "modified": "2023-04-09 23:52:23.823063 -0500 CDT"
  }
]